summary(d1tc)
+Changing.information+Significant.physical.illness,data=day_1)
colnames(day_1)
d2tc<-lm(Totalomplexity~Unnecessary.Information+Large.number.of.decision.steps+Lack.of.expertise+Confusing.information+Decision.conflict+Lack.of.team.coordination+Urgent.information+Unclear.goals+Noncompliant.patient,data=day_2)
d2tc<-lm(TotalComplexity~Unnecessary.Information+Large.number.of.decision.steps+Lack.of.expertise+Confusing.information+Decision.conflict+Lack.of.team.coordination+Urgent.information+Unclear.goals+Noncompliant.patient,data=day_2)
summary(d2tc)
summary(d1tc)
d3tc<-lm(Totalomplexity~Unnecessary.Information+Large.number.of.decision.steps+Lack.of.expertise+Confusing.information+Decision.conflict+Lack.of.team.coordination+Multiple.decsion.making.options+Unclear.goals+Changing.information+Significant.physical.illness,data=day_3)
d3tc<-lm(TotalComplexity~Unnecessary.Information+Large.number.of.decision.steps+Lack.of.expertise+Confusing.information+Decision.conflict+Lack.of.team.coordination+Multiple.decsion.making.options+Unclear.goals+Changing.information+Significant.physical.illness,data=day_3)
summary(d3tc)
d4tc<-lm(Totalomplexity~Large.number.of.decision.steps+Lack.of.expertise+Confusing.information+Conflicting.goals+Decision.conflict+Lack.of.team.coordination+Changing.information,data=day_1)
d4tc<-lm(TotalComplexity~Large.number.of.decision.steps+Lack.of.expertise+Confusing.information+Conflicting.goals+Decision.conflict+Lack.of.team.coordination+Changing.information,data=day_4)
summary(d4tc)
day_4
day_1<-subset(complex[,3:22],complex$Days=="Day 1")
dim(day_1)
day_2<-subset(complex[,3:22],complex$Days=="Day 2")
dim(day_2)
day_3<-subset(complex[,3:22],complex$Days=="Day 3")
dim(day_3)
day_4<-subset(complex[,3:22],complex$Days=="Day 4")
dim(day_4)
names<-unique(complex$Cases)
names
rownames(day_1)=rownames(day_2)=rownames(day_3)=rownames(day_4)=names
day_1[,"TotalComplexity"]<-apply(day_1,1,sum)
day_2[,"TotalComplexity"]<-apply(day_2,1,sum)
day_3[,"TotalComplexity"]<-apply(day_3,1,sum)
day_4[,"TotalComplexity"]<-apply(day_4,1,sum)
d1tc<-lm(TotalComplexity~Unnecessary.Information+Large.number.of.decision.steps+Lack.of.expertise+Confusing.information+Decision.conflict+Lack.of.team.coordination+Urgent.information+Changing.information+Significant.physical.illness,data=day_1)
d2tc<-lm(TotalComplexity~Unnecessary.Information+Large.number.of.decision.steps+Lack.of.expertise+Confusing.information+Decision.conflict+Lack.of.team.coordination+Urgent.information+Unclear.goals+Noncompliant.patient,data=day_2)
d3tc<-lm(TotalComplexity~Unnecessary.Information+Large.number.of.decision.steps+Lack.of.expertise+Confusing.information+Decision.conflict+Lack.of.team.coordination+Multiple.decsion.making.options+Unclear.goals+Changing.information+Significant.physical.illness,data=day_3)
d4tc<-lm(TotalComplexity~Large.number.of.decision.steps+Lack.of.expertise+Confusing.information+Conflicting.goals+Decision.conflict+Lack.of.team.coordination+Changing.information,data=day_4)
sub1<- complex[1:24,]
day_1
summary(d1tc)
summary(d2tc)
summary(d3tc)
summary(d4tc)
d4tc<-lm(TotalComplexity~Large.number.of.decision.steps+Lack.of.expertise+Confusing.information+Conflicting.goals+Lack.of.team.coordination+Changing.information,data=day_4)
summary(d4tc)
install.packages("pROC")
install.packages("rorc")
install.packages("ROCR")
head(common_all)
#######################comparing gene counts results in our dataset############
setwd("../Analysis datasets/")
rsem_her2_expected_counts<-read.table("GFP18_HER2_TCGA_Pipeline_Expected_Gene_Counts.txt", sep='\t', header=1, row.names=1, check.names=F)
feature<-read.table("GFP18_HER2_Rsubread_geneCounts.txt", sep='\t',header=1, row.names=1, check.names = F)
TCGA_her2<-read.table("GFP18_HER2_TCGA_Pipeline_Normalized_Genes_Results.txt", sep='\t', header=1, check.names=F)
rsub_fpkmlog<-read.table("GFP18_HER2_Rsubread_FPKMlog.txt", sep='\t',header=1, row.names=1, check.names = F)
rsub_fpkm<-read.table("GFP18_HER2_Rsubread_FPKM.txt", sep='\t',header=1, row.names=1, check.names = F)
rsub_tpmlog<-read.table("GFP18_HER2_Rsubread_TPMlog.txt", sep='\t',header=1, row.names=1, check.names = F)
rsub_tpm<-read.table("GFP18_HER2_Rsubread_TPM.txt", sep='\t',header=1, row.names=1, check.names = F)
rsub_preds<-read.table("rsubread_10_14.txt", sep='\t', header=1, row.names=1)
tcga_preds<-read.table("Rsem_10_14.txt", sep='\t', header=1, row.names=1)
pancan12_zero<-read.table("PANCAN12_19583_by_3380_numZeroes.txt",row.names=1,sep='\t',skip = 1)
pancan20_tpm_zero<-read.table("PANCAN20_19583_by_3380_numZeroes.txt",sep='\t',row.names=1,skip = 1)
clinicals<-t(read.delim('TCGA20_clinical_data_ordered_all_clinical_variables_samples_as_columns.txt',sep='\t',header=1, row.names=1,check.names=F))
data12 = read.table("Classification_12_LUAD_LUSC_Predictions.txt", sep="\t", stringsAsFactors=FALSE, header=TRUE, row.names=1)
data20 = read.table("Classification_20_LUAD_LUSC_Predictions.txt", sep="\t", stringsAsFactors=FALSE, header=TRUE, row.names=1)
standardized_mean<-function(m.1,sd.1,n.1,m.2,sd.2,n.2){
sd_pooled=sqrt(((n.1-1)*sd.1^2+(n.2-1)*sd.2^2)/(n.1+n.2-2))
(m.1-m.2)/sd_pooled
}
merge_drop<-function(x,y,by=0)
{
new_m<-merge(x,y,by=by)
rownames(new_m)<-new_m$Row.names
return(new_m[,2:length(colnames(new_m))])
}
plotROC = function(actual, probabilities, plotCI=FALSE)
{
# bottom, left, top, right
par(mar=c(4.5, 4.7, 0.0, 0.5),lwd=4)
library(pROC)
roc_result = roc(actual ~ probabilities, ci=TRUE, plot=TRUE, print.auc=FALSE)
lowerBoundAuc = format(roc_result$ci[1], digits=3)
midAuc = format(roc_result$ci[2], digits=3)
upperBoundAuc = format(roc_result$ci[3], digits=3)
if (plotCI)
{
ci(roc_result)
sens.ci <- ci.se(roc_result)
plot(sens.ci, type="shape", col="gray95")
plot(sens.ci, type="bars")
plot(roc_result, add=TRUE)
}
text(0.5, 0.00, labels=paste("AUC: ", midAuc, " (", lowerBoundAuc, "-", upperBoundAuc, ")", sep=""))
par(mar=c(5.1, 4.1, 2.1, 2.1))
}
all_preds<-merge_drop(rsub_preds,tcga_preds,by=0)
pwd
pwd()
getwd()
setwd("~/Dropbox/TCGA_RNASeq_clinical/Analysis datasets/")
#######################comparing gene counts results in our dataset############
setwd("../Analysis datasets/")
rsem_her2_expected_counts<-read.table("GFP18_HER2_TCGA_Pipeline_Expected_Gene_Counts.txt", sep='\t', header=1, row.names=1, check.names=F)
feature<-read.table("GFP18_HER2_Rsubread_geneCounts.txt", sep='\t',header=1, row.names=1, check.names = F)
TCGA_her2<-read.table("GFP18_HER2_TCGA_Pipeline_Normalized_Genes_Results.txt", sep='\t', header=1, check.names=F)
rsub_fpkmlog<-read.table("GFP18_HER2_Rsubread_FPKMlog.txt", sep='\t',header=1, row.names=1, check.names = F)
rsub_fpkm<-read.table("GFP18_HER2_Rsubread_FPKM.txt", sep='\t',header=1, row.names=1, check.names = F)
rsub_tpmlog<-read.table("GFP18_HER2_Rsubread_TPMlog.txt", sep='\t',header=1, row.names=1, check.names = F)
rsub_tpm<-read.table("GFP18_HER2_Rsubread_TPM.txt", sep='\t',header=1, row.names=1, check.names = F)
rsub_preds<-read.table("rsubread_10_14.txt", sep='\t', header=1, row.names=1)
tcga_preds<-read.table("Rsem_10_14.txt", sep='\t', header=1, row.names=1)
pancan12_zero<-read.table("PANCAN12_19583_by_3380_numZeroes.txt",row.names=1,sep='\t',skip = 1)
pancan20_tpm_zero<-read.table("PANCAN20_19583_by_3380_numZeroes.txt",sep='\t',row.names=1,skip = 1)
clinicals<-t(read.delim('TCGA20_clinical_data_ordered_all_clinical_variables_samples_as_columns.txt',sep='\t',header=1, row.names=1,check.names=F))
data12 = read.table("Classification_12_LUAD_LUSC_Predictions.txt", sep="\t", stringsAsFactors=FALSE, header=TRUE, row.names=1)
data20 = read.table("Classification_20_LUAD_LUSC_Predictions.txt", sep="\t", stringsAsFactors=FALSE, header=TRUE, row.names=1)
standardized_mean<-function(m.1,sd.1,n.1,m.2,sd.2,n.2){
sd_pooled=sqrt(((n.1-1)*sd.1^2+(n.2-1)*sd.2^2)/(n.1+n.2-2))
(m.1-m.2)/sd_pooled
}
merge_drop<-function(x,y,by=0)
{
new_m<-merge(x,y,by=by)
rownames(new_m)<-new_m$Row.names
return(new_m[,2:length(colnames(new_m))])
}
plotROC = function(actual, probabilities, plotCI=FALSE)
{
# bottom, left, top, right
par(mar=c(4.5, 4.7, 0.0, 0.5),lwd=4)
library(pROC)
roc_result = roc(actual ~ probabilities, ci=TRUE, plot=TRUE, print.auc=FALSE)
lowerBoundAuc = format(roc_result$ci[1], digits=3)
midAuc = format(roc_result$ci[2], digits=3)
upperBoundAuc = format(roc_result$ci[3], digits=3)
if (plotCI)
{
ci(roc_result)
sens.ci <- ci.se(roc_result)
plot(sens.ci, type="shape", col="gray95")
plot(sens.ci, type="bars")
plot(roc_result, add=TRUE)
}
text(0.5, 0.00, labels=paste("AUC: ", midAuc, " (", lowerBoundAuc, "-", upperBoundAuc, ")", sep=""))
par(mar=c(5.1, 4.1, 2.1, 2.1))
}
all_preds<-merge_drop(rsub_preds,tcga_preds,by=0)
brca_clinical<-subset(clinicals,clinicals[,'tumor_tissue_site']=='Breast',select=c("bcr_patient_barcode","her2_status_by_ihc"))
common_all<-merge_drop(all_preds,brca_clinical,by=0)
head(common_all)
all_preds_pos_neg<-subset(common_all,common_all$her2_status_by_ihc=="Negative"|common_all$her2_status_by_ihc=="Positive")
ihc_neg_t<-subset(common_all,common_all$her2_status_by_ihc=="Negative")
ihc_pos_t<-subset(common_all,common_all$her2_status_by_ihc=="Positive")
sd(ihc_neg_t$Rsem_log_q_200_f)/mean(ihc_neg_t$Rsem_log_q_200_f)
sd(ihc_pos_t$Rsem_log_q_200_f)/mean(ihc_pos_t$Rsem_log_q_200_f)
sd(ihc_neg_t$Rsem_log_q_200_f)/mean(ihc_neg_t$Rsem_log_q_200_f)
sd(ihc_pos_t$Rsem_log_q_200_f)/mean(ihc_pos_t$Rsem_log_q_200_f)
sd(ihc_neg_t$FPKM_log_q_200_f)/mean(ihc_neg_t$FPKM_log_q_200_f)
sd(ihc_pos_t$FPKM_log_q_200_f)/mean(ihc_pos_t$FPKM_log_q_200_f)
sd(ihc_neg_t$TPM_log_q_200_f)/mean(ihc_neg_t$TPM_log_q_200_f)
sd(ihc_pos_t$TPM_log_q_200_f)/mean(ihc_pos_t$TPM_log_q_200_f)
standardized_mean(m.1=mean(ihc_pos_t$Rsem_log_q_200_f),sd.1=sd(ihc_pos_t$Rsem_log_q_200_f),n.1=length(ihc_pos_t$Rsem_log_q_200_f),m.2=mean(ihc_neg_t$Rsem_log_q_200_f),sd.2=sd(ihc_neg_t$Rsem_log_q_200_f),n.2=length(ihc_neg_t$Rsem_log_q_200_f))
standardized_mean(m.1=mean(ihc_pos_t$FPKM_log_q_200_f),sd.1=sd(ihc_pos_t$FPKM_log_q_200_f),n.1=length(ihc_pos_t$FPKM_log_q_200_f),m.2=mean(ihc_neg_t$FPKM_log_q_200_f),sd.2=sd(ihc_neg_t$FPKM_log_q_200_f),n.2=length(ihc_neg_t$FPKM_log_q_200_f))
standardized_mean(m.1=mean(ihc_pos_t$TPM_log_q_200_f),sd.1=sd(ihc_pos_t$TPM_log_q_200_f),n.1=length(ihc_pos_t$TPM_log_q_200_f),m.2=mean(ihc_neg_t$TPM_log_q_200_f),sd.2=sd(ihc_neg_t$TPM_log_q_200_f),n.2=length(ihc_neg_t$TPM_log_q_200_f))
print(paste("Total number of genes having coefficient of variation less than or equal to 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)<=1)), sep=':'))
#######################comparing gene counts results in our dataset############
setwd("../Analysis datasets/")
rsem_her2_expected_counts<-read.table("GFP18_HER2_TCGA_Pipeline_Expected_Gene_Counts.txt", sep='\t', header=1, row.names=1, check.names=F)
feature<-read.table("GFP18_HER2_Rsubread_geneCounts.txt", sep='\t',header=1, row.names=1, check.names = F)
TCGA_her2<-read.table("GFP18_HER2_TCGA_Pipeline_Normalized_Genes_Results.txt", sep='\t', header=1, check.names=F)
rsub_fpkmlog<-read.table("GFP18_HER2_Rsubread_FPKMlog.txt", sep='\t',header=1, row.names=1, check.names = F)
rsub_fpkm<-read.table("GFP18_HER2_Rsubread_FPKM.txt", sep='\t',header=1, row.names=1, check.names = F)
rsub_tpmlog<-read.table("GFP18_HER2_Rsubread_TPMlog.txt", sep='\t',header=1, row.names=1, check.names = F)
rsub_tpm<-read.table("GFP18_HER2_Rsubread_TPM.txt", sep='\t',header=1, row.names=1, check.names = F)
rsub_preds<-read.table("rsubread_10_14.txt", sep='\t', header=1, row.names=1)
tcga_preds<-read.table("Rsem_10_14.txt", sep='\t', header=1, row.names=1)
pancan12_zero<-read.table("PANCAN12_19583_by_3380_numZeroes.txt",row.names=1,sep='\t',skip = 1)
pancan20_tpm_zero<-read.table("PANCAN20_19583_by_3380_numZeroes.txt",sep='\t',row.names=1,skip = 1)
clinicals<-t(read.delim('TCGA20_clinical_data_ordered_all_clinical_variables_samples_as_columns.txt',sep='\t',header=1, row.names=1,check.names=F))
data12 = read.table("Classification_12_LUAD_LUSC_Predictions.txt", sep="\t", stringsAsFactors=FALSE, header=TRUE, row.names=1)
data20 = read.table("Classification_20_LUAD_LUSC_Predictions.txt", sep="\t", stringsAsFactors=FALSE, header=TRUE, row.names=1)
standardized_mean<-function(m.1,sd.1,n.1,m.2,sd.2,n.2){
sd_pooled=sqrt(((n.1-1)*sd.1^2+(n.2-1)*sd.2^2)/(n.1+n.2-2))
(m.1-m.2)/sd_pooled
}
merge_drop<-function(x,y,by=0)
{
new_m<-merge(x,y,by=by)
rownames(new_m)<-new_m$Row.names
return(new_m[,2:length(colnames(new_m))])
}
plotROC = function(actual, probabilities, plotCI=FALSE)
{
# bottom, left, top, right
par(mar=c(4.5, 4.7, 0.0, 0.5),lwd=4)
library(pROC)
roc_result = roc(actual ~ probabilities, ci=TRUE, plot=TRUE, print.auc=FALSE)
lowerBoundAuc = format(roc_result$ci[1], digits=3)
midAuc = format(roc_result$ci[2], digits=3)
upperBoundAuc = format(roc_result$ci[3], digits=3)
if (plotCI)
{
ci(roc_result)
sens.ci <- ci.se(roc_result)
plot(sens.ci, type="shape", col="gray95")
plot(sens.ci, type="bars")
plot(roc_result, add=TRUE)
}
text(0.5, 0.00, labels=paste("AUC: ", midAuc, " (", lowerBoundAuc, "-", upperBoundAuc, ")", sep=""))
par(mar=c(5.1, 4.1, 2.1, 2.1))
}
#######################comparing gene counts results ############
TCGA_her2_filtered<-TCGA_her2[!duplicated(TCGA_her2$Gene),]
rownames(TCGA_her2_filtered)<-TCGA_her2_filtered$Gene
TCGA_her2<-subset(TCGA_her2_filtered,select=-Gene)
com_genes_TCGA<-TCGA_her2[rownames(TCGA_her2)%in%rownames(rsub_fpkm),]
par( mfrow = c( 1,3 ) ,lwd=4)
###Coefficient of variation in GFP samples across all common genes
####Coefficient of variation in TCGA pipeline processed data
com_genes_TCGA<-TCGA_her2[rownames(TCGA_her2)%in%rownames(rsub_fpkm),]
hist(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean),main = "TCGA Level 3",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
print(paste("Total number of genes having coefficient of variation less than or equal to 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)<=1)), sep=':'))
print(paste("Total number of genes having coefficient of variation more than 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)>1)), sep=':'))
tcga_her2_normalized<-data.frame(t(TCGA_her2["ERBB2",]))
tcga_her2_log_normalized<-data.frame(t(TCGA_her2["ERBB2",]))
####Coefficient of variation in Rsubread pipeline processed data
com_genes_fpkm<-rsub_fpkm[rownames(rsub_fpkm)%in%rownames(com_genes_TCGA),]
hist(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean),main = "Rsubread FPKM",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
print(paste("Total number of genes having coefficient of variation less than or equal to 1 ",sum(na.omit(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean)<=1)), sep=':'))
print(paste("Total number of genes having coefficient of variation greater than 1 "sum(na.omit(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean)>1)), sep=':'))
rsub_fpkmlog_her2<-data.frame(t(rsub_fpkmlog["ERBB2",]))
rsub_fpkm_her2<-data.frame(t(rsub_fpkm["ERBB2",]))
com_genes_tpm<-rsub_fpkm[rownames(rsub_tpm)%in%rownames(com_genes_TCGA),]
hist(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)),main = "Rsubread TPM",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
print(paste("Total number of genes having coefficient of variation less than or equal to 1 ",sum(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)<=1)), sep=':'))
print(paste("Total number of genes having coefficient of variation less than or equal to 1 "sum(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)>1)), sep=':'))
rsub_tpm_her2<-data.frame(t(rsub_tpm["ERBB2",]))
rsub_tpmlog_her2<-data.frame(t(rsub_tpmlog["ERBB2",]))
#######post normalization ecdf
ecdf_all_ex<-apply(log2(TCGA_her2+1),2,ecdf)
par( mfrow = c( 1, 3 ) )
plot(ecdf_all_ex[[1]],xlab=NA, ylab = NA,col="blue",main="TCGA Level 3",ylim=c(0,1),xlim = c(0,20),cex.axis=1.5, cex.lab=1.5,)
for(i in 2:12){lines(ecdf_all_ex[[i]],xlab=NA, ylab = NA,col="blue")}
for(i in 13:17){lines(ecdf_all_ex[[i]],xlab=NA, ylab = NA,col="brown")}
###using Rsubread pipeline aligned data
ecdf_all<-apply(rsub_fpkmlog,2,ecdf)
plot(ecdf_all[[1]],xlab=NA, ylab = NA,col="blue",main="Rsubread FPKM",ylim=c(0,1),xlim = c(0,20),cex.axis=1.5, cex.lab=1.5,)
for(i in 2:12){lines(ecdf_all[[i]],xlab=NA,ylab = NA,col="blue")}
for(i in 13:17){lines(ecdf_all[[i]],xlab=NA,ylab = NA,col="brown")}
ecdf_all_t<-apply(rsub_tpmlog,2,ecdf)
plot(ecdf_all_t[[1]],xlab=NA, ylab = NA,col="blue",main="Rsubread TPM",ylim=c(0,1),xlim = c(0,20),cex.axis=1.5, cex.lab=1.5,)
for(i in 2:12){lines(ecdf_all_t[[i]],xlab=NA,ylab = NA,col="blue")}
for(i in 13:17){lines(ecdf_all_t[[i]],xlab=NA,ylab = NA,col="brown")}
###Creating boxplots of the normalized ERBB2 expression
par( mfrow = c( 1, 1 ) )
par(mar=c(5.6, 4.1, 0.5, 0.5))
boxplot(log2(tcga_her2_normalized$ERBB2[1:12]+1),log2(tcga_her2_normalized$ERBB2[13:17]+1),rsub_fpkmlog_her2$ERBB2[1:12],rsub_fpkmlog_her2$ERBB2[13:17],rsub_tpmlog_her2$ERBB2[1:12],rsub_tpmlog_her2$ERBB2[13:17],ylab="log2(HER2 gene expression values)",range=0,cex.axis=1.5, cex.lab=1.5,outpch=NA,col='grey75',medcol="grey75",lwd=3,border = "grey35")
names=c("TCGA\nGFP","TCGA\nHER2","Rsubred FPKM\nGFP", "Rsubred FPKM\nHER2","Rsubred TPM\nGFP", "Rsubred TPM\nHER2")
text(seq(1,6,by=1),par("usr")[3] - 2.5, labels = names, srt = 45, pos = 1, xpd = TRUE)
points(jitter(rep(1,12),factor=2),log2(tcga_her2_normalized$ERBB2[1:12]+1),pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(2,5),factor=2),log2(tcga_her2_normalized$ERBB2[13:17]+1),pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(3,12),factor=2),rsub_fpkmlog_her2$ERBB2[1:12],pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(4,5),factor=2),rsub_fpkmlog_her2$ERBB2[13:17],pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(5,12),factor=2),rsub_tpmlog_her2$ERBB2[1:12],pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(6,5),factor=2),rsub_tpmlog_her2$ERBB2[13:17],pch=4,cex=2,cex.lab=1.5)
###t.test to see if there is significance
t.test(log2(tcga_her2_normalized$ERBB2[1:12]+1),log2(tcga_her2_normalized$ERBB2[13:17]+1))
t.test(rsub_fpkmlog_her2$ERBB2[1:12],rsub_fpkmlog_her2$ERBB2[13:17])
t.test(rsub_tpmlog_her2$ERBB2[1:12],rsub_tpmlog_her2$ERBB2[13:17])
###Standardized mean difference: TCGA pipeline normalized ERBB2 expression values
standardized_mean(m.1=mean((log2(tcga_her2_normalized$ERBB2[13:17]+1))),sd.1=sd((log2(tcga_her2_normalized$ERBB2[13:17]+1))),n.1=5,m.2=mean((log2(tcga_her2_normalized$ERBB2[1:12]+1))),sd.2=sd((log2(tcga_her2_normalized$ERBB2[1:12]+1))),n.2=12)
###Standardized mean difference: Rsubread pipeline FPKM normalized ERBB2 expression values
standardized_mean(mean(rsub_fpkmlog_her2$ERBB2[13:17]),sd(rsub_fpkmlog_her2$ERBB2[13:17]),5,mean(rsub_fpkmlog_her2$ERBB2[1:12]),sd(rsub_fpkmlog_her2$ERBB2[1:12]),12)
###Standardized mean difference:Rsubread pipeline TPM normalized ERBB2 expression values
standardized_mean(mean(rsub_tpmlog_her2$ERBB2[13:17]),sd(rsub_tpmlog_her2$ERBB2[13:17]),5,mean(rsub_tpmlog_her2$ERBB2[1:12]),sd(rsub_fpkmlog_her2$ERBB2[1:12]),12)
print(paste("Total number of genes having coefficient of variation less than or equal to 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)<=1)), sep=':'))
print(paste("Total number of genes having coefficient of variation more than 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)>1)), sep=':'))
#######################comparing gene counts results ############
TCGA_her2_filtered<-TCGA_her2[!duplicated(TCGA_her2$Gene),]
rownames(TCGA_her2_filtered)<-TCGA_her2_filtered$Gene
TCGA_her2<-subset(TCGA_her2_filtered,select=-Gene)
com_genes_TCGA<-TCGA_her2[rownames(TCGA_her2)%in%rownames(rsub_fpkm),]
par( mfrow = c( 1,3 ) ,lwd=4)
###Coefficient of variation in GFP samples across all common genes
####Coefficient of variation in TCGA pipeline processed data
com_genes_TCGA<-TCGA_her2[rownames(TCGA_her2)%in%rownames(rsub_fpkm),]
hist(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean),main = "TCGA Level 3",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
print(paste("Total number of genes having coefficient of variation less than or equal to 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)<=1)), sep=':'))
print(paste("Total number of genes having coefficient of variation more than 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)>1)), sep=':'))
tcga_her2_normalized<-data.frame(t(TCGA_her2["ERBB2",]))
tcga_her2_log_normalized<-data.frame(t(TCGA_her2["ERBB2",]))
####Coefficient of variation in Rsubread pipeline processed data
com_genes_fpkm<-rsub_fpkm[rownames(rsub_fpkm)%in%rownames(com_genes_TCGA),]
hist(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean),main = "Rsubread FPKM",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
print(paste("Total number of genes having coefficient of variation less than or equal to 1 ",sum(na.omit(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean)<=1)), sep=':'))
print(paste("Total number of genes having coefficient of variation greater than 1 "sum(na.omit(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean)>1)), sep=':'))
rsub_fpkmlog_her2<-data.frame(t(rsub_fpkmlog["ERBB2",]))
rsub_fpkm_her2<-data.frame(t(rsub_fpkm["ERBB2",]))
com_genes_tpm<-rsub_fpkm[rownames(rsub_tpm)%in%rownames(com_genes_TCGA),]
hist(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)),main = "Rsubread TPM",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
print(paste("Total number of genes having coefficient of variation less than or equal to 1 ",sum(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)<=1)), sep=':'))
print(paste("Total number of genes having coefficient of variation less than or equal to 1 "sum(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)>1)), sep=':'))
rsub_tpm_her2<-data.frame(t(rsub_tpm["ERBB2",]))
rsub_tpmlog_her2<-data.frame(t(rsub_tpmlog["ERBB2",]))
#######post normalization ecdf
ecdf_all_ex<-apply(log2(TCGA_her2+1),2,ecdf)
par( mfrow = c( 1, 3 ) )
plot(ecdf_all_ex[[1]],xlab=NA, ylab = NA,col="blue",main="TCGA Level 3",ylim=c(0,1),xlim = c(0,20),cex.axis=1.5, cex.lab=1.5,)
for(i in 2:12){lines(ecdf_all_ex[[i]],xlab=NA, ylab = NA,col="blue")}
for(i in 13:17){lines(ecdf_all_ex[[i]],xlab=NA, ylab = NA,col="brown")}
###using Rsubread pipeline aligned data
ecdf_all<-apply(rsub_fpkmlog,2,ecdf)
plot(ecdf_all[[1]],xlab=NA, ylab = NA,col="blue",main="Rsubread FPKM",ylim=c(0,1),xlim = c(0,20),cex.axis=1.5, cex.lab=1.5,)
for(i in 2:12){lines(ecdf_all[[i]],xlab=NA,ylab = NA,col="blue")}
for(i in 13:17){lines(ecdf_all[[i]],xlab=NA,ylab = NA,col="brown")}
ecdf_all_t<-apply(rsub_tpmlog,2,ecdf)
plot(ecdf_all_t[[1]],xlab=NA, ylab = NA,col="blue",main="Rsubread TPM",ylim=c(0,1),xlim = c(0,20),cex.axis=1.5, cex.lab=1.5,)
for(i in 2:12){lines(ecdf_all_t[[i]],xlab=NA,ylab = NA,col="blue")}
for(i in 13:17){lines(ecdf_all_t[[i]],xlab=NA,ylab = NA,col="brown")}
###Creating boxplots of the normalized ERBB2 expression
par( mfrow = c( 1, 1 ) )
par(mar=c(5.6, 4.1, 0.5, 0.5))
boxplot(log2(tcga_her2_normalized$ERBB2[1:12]+1),log2(tcga_her2_normalized$ERBB2[13:17]+1),rsub_fpkmlog_her2$ERBB2[1:12],rsub_fpkmlog_her2$ERBB2[13:17],rsub_tpmlog_her2$ERBB2[1:12],rsub_tpmlog_her2$ERBB2[13:17],ylab="log2(HER2 gene expression values)",range=0,cex.axis=1.5, cex.lab=1.5,outpch=NA,col='grey75',medcol="grey75",lwd=3,border = "grey35")
names=c("TCGA\nGFP","TCGA\nHER2","Rsubred FPKM\nGFP", "Rsubred FPKM\nHER2","Rsubred TPM\nGFP", "Rsubred TPM\nHER2")
text(seq(1,6,by=1),par("usr")[3] - 2.5, labels = names, srt = 45, pos = 1, xpd = TRUE)
points(jitter(rep(1,12),factor=2),log2(tcga_her2_normalized$ERBB2[1:12]+1),pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(2,5),factor=2),log2(tcga_her2_normalized$ERBB2[13:17]+1),pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(3,12),factor=2),rsub_fpkmlog_her2$ERBB2[1:12],pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(4,5),factor=2),rsub_fpkmlog_her2$ERBB2[13:17],pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(5,12),factor=2),rsub_tpmlog_her2$ERBB2[1:12],pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(6,5),factor=2),rsub_tpmlog_her2$ERBB2[13:17],pch=4,cex=2,cex.lab=1.5)
###t.test to see if there is significance
t.test(log2(tcga_her2_normalized$ERBB2[1:12]+1),log2(tcga_her2_normalized$ERBB2[13:17]+1))
t.test(rsub_fpkmlog_her2$ERBB2[1:12],rsub_fpkmlog_her2$ERBB2[13:17])
t.test(rsub_tpmlog_her2$ERBB2[1:12],rsub_tpmlog_her2$ERBB2[13:17])
###Standardized mean difference: TCGA pipeline normalized ERBB2 expression values
standardized_mean(m.1=mean((log2(tcga_her2_normalized$ERBB2[13:17]+1))),sd.1=sd((log2(tcga_her2_normalized$ERBB2[13:17]+1))),n.1=5,m.2=mean((log2(tcga_her2_normalized$ERBB2[1:12]+1))),sd.2=sd((log2(tcga_her2_normalized$ERBB2[1:12]+1))),n.2=12)
###Standardized mean difference: Rsubread pipeline FPKM normalized ERBB2 expression values
standardized_mean(mean(rsub_fpkmlog_her2$ERBB2[13:17]),sd(rsub_fpkmlog_her2$ERBB2[13:17]),5,mean(rsub_fpkmlog_her2$ERBB2[1:12]),sd(rsub_fpkmlog_her2$ERBB2[1:12]),12)
###Standardized mean difference:Rsubread pipeline TPM normalized ERBB2 expression values
standardized_mean(mean(rsub_tpmlog_her2$ERBB2[13:17]),sd(rsub_tpmlog_her2$ERBB2[13:17]),5,mean(rsub_tpmlog_her2$ERBB2[1:12]),sd(rsub_fpkmlog_her2$ERBB2[1:12]),12)
head(TCGA_her2)
TCGA_her2_filtered<-TCGA_her2[!duplicated(rownames(TCGA_her2)),]
dim(TCGA_her2)
dim(TCGA_her2_filtered)
com_genes_TCGA<-TCGA_her2[rownames(TCGA_her2)%in%rownames(rsub_fpkm),]
par( mfrow = c( 1,3 ) ,lwd=4)
###Coefficient of variation in GFP samples across all common genes
####Coefficient of variation in TCGA pipeline processed data
com_genes_TCGA<-TCGA_her2[rownames(TCGA_her2)%in%rownames(rsub_fpkm),]
hist(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean),main = "TCGA Level 3",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
print(paste("Total number of genes having coefficient of variation less than or equal to 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)<=1)), sep=':'))
print(paste("Total number of genes having coefficient of variation more than 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)>1)), sep=':'))
#######################comparing gene counts results ############
com_genes_TCGA<-TCGA_her2[rownames(TCGA_her2)%in%rownames(rsub_fpkm),]
par( mfrow = c( 1,3 ) ,lwd=4)
###Coefficient of variation in GFP samples across all common genes
####Coefficient of variation in TCGA pipeline processed data
com_genes_TCGA<-TCGA_her2[rownames(TCGA_her2)%in%rownames(rsub_fpkm),]
hist(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean),main = "TCGA Level 3",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
print(paste("Total number of genes having coefficient of variation less than or equal to 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)<=1)), sep=':'))
print(paste("Total number of genes having coefficient of variation more than 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)>1)), sep=':'))
tcga_her2_normalized<-data.frame(t(TCGA_her2["ERBB2",]))
tcga_her2_log_normalized<-data.frame(t(TCGA_her2["ERBB2",]))
####Coefficient of variation in Rsubread pipeline processed data
com_genes_fpkm<-rsub_fpkm[rownames(rsub_fpkm)%in%rownames(com_genes_TCGA),]
hist(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean),main = "Rsubread FPKM",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
print(paste("Total number of genes having coefficient of variation less than or equal to 1 ",sum(na.omit(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean)<=1)), sep=':'))
print(paste("Total number of genes having coefficient of variation greater than 1 "sum(na.omit(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean)>1)), sep=':'))
rsub_fpkmlog_her2<-data.frame(t(rsub_fpkmlog["ERBB2",]))
rsub_fpkm_her2<-data.frame(t(rsub_fpkm["ERBB2",]))
com_genes_tpm<-rsub_fpkm[rownames(rsub_tpm)%in%rownames(com_genes_TCGA),]
hist(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)),main = "Rsubread TPM",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
print(paste("Total number of genes having coefficient of variation less than or equal to 1 ",sum(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)<=1)), sep=':'))
print(paste("Total number of genes having coefficient of variation less than or equal to 1 "sum(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)>1)), sep=':'))
rsub_tpm_her2<-data.frame(t(rsub_tpm["ERBB2",]))
rsub_tpmlog_her2<-data.frame(t(rsub_tpmlog["ERBB2",]))
#######post normalization ecdf
ecdf_all_ex<-apply(log2(TCGA_her2+1),2,ecdf)
par( mfrow = c( 1, 3 ) )
plot(ecdf_all_ex[[1]],xlab=NA, ylab = NA,col="blue",main="TCGA Level 3",ylim=c(0,1),xlim = c(0,20),cex.axis=1.5, cex.lab=1.5,)
for(i in 2:12){lines(ecdf_all_ex[[i]],xlab=NA, ylab = NA,col="blue")}
for(i in 13:17){lines(ecdf_all_ex[[i]],xlab=NA, ylab = NA,col="brown")}
###using Rsubread pipeline aligned data
ecdf_all<-apply(rsub_fpkmlog,2,ecdf)
plot(ecdf_all[[1]],xlab=NA, ylab = NA,col="blue",main="Rsubread FPKM",ylim=c(0,1),xlim = c(0,20),cex.axis=1.5, cex.lab=1.5,)
for(i in 2:12){lines(ecdf_all[[i]],xlab=NA,ylab = NA,col="blue")}
for(i in 13:17){lines(ecdf_all[[i]],xlab=NA,ylab = NA,col="brown")}
ecdf_all_t<-apply(rsub_tpmlog,2,ecdf)
plot(ecdf_all_t[[1]],xlab=NA, ylab = NA,col="blue",main="Rsubread TPM",ylim=c(0,1),xlim = c(0,20),cex.axis=1.5, cex.lab=1.5,)
for(i in 2:12){lines(ecdf_all_t[[i]],xlab=NA,ylab = NA,col="blue")}
for(i in 13:17){lines(ecdf_all_t[[i]],xlab=NA,ylab = NA,col="brown")}
###Creating boxplots of the normalized ERBB2 expression
par( mfrow = c( 1, 1 ) )
par(mar=c(5.6, 4.1, 0.5, 0.5))
boxplot(log2(tcga_her2_normalized$ERBB2[1:12]+1),log2(tcga_her2_normalized$ERBB2[13:17]+1),rsub_fpkmlog_her2$ERBB2[1:12],rsub_fpkmlog_her2$ERBB2[13:17],rsub_tpmlog_her2$ERBB2[1:12],rsub_tpmlog_her2$ERBB2[13:17],ylab="log2(HER2 gene expression values)",range=0,cex.axis=1.5, cex.lab=1.5,outpch=NA,col='grey75',medcol="grey75",lwd=3,border = "grey35")
names=c("TCGA\nGFP","TCGA\nHER2","Rsubred FPKM\nGFP", "Rsubred FPKM\nHER2","Rsubred TPM\nGFP", "Rsubred TPM\nHER2")
text(seq(1,6,by=1),par("usr")[3] - 2.5, labels = names, srt = 45, pos = 1, xpd = TRUE)
points(jitter(rep(1,12),factor=2),log2(tcga_her2_normalized$ERBB2[1:12]+1),pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(2,5),factor=2),log2(tcga_her2_normalized$ERBB2[13:17]+1),pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(3,12),factor=2),rsub_fpkmlog_her2$ERBB2[1:12],pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(4,5),factor=2),rsub_fpkmlog_her2$ERBB2[13:17],pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(5,12),factor=2),rsub_tpmlog_her2$ERBB2[1:12],pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(6,5),factor=2),rsub_tpmlog_her2$ERBB2[13:17],pch=4,cex=2,cex.lab=1.5)
###t.test to see if there is significance
t.test(log2(tcga_her2_normalized$ERBB2[1:12]+1),log2(tcga_her2_normalized$ERBB2[13:17]+1))
t.test(rsub_fpkmlog_her2$ERBB2[1:12],rsub_fpkmlog_her2$ERBB2[13:17])
t.test(rsub_tpmlog_her2$ERBB2[1:12],rsub_tpmlog_her2$ERBB2[13:17])
###Standardized mean difference: TCGA pipeline normalized ERBB2 expression values
standardized_mean(m.1=mean((log2(tcga_her2_normalized$ERBB2[13:17]+1))),sd.1=sd((log2(tcga_her2_normalized$ERBB2[13:17]+1))),n.1=5,m.2=mean((log2(tcga_her2_normalized$ERBB2[1:12]+1))),sd.2=sd((log2(tcga_her2_normalized$ERBB2[1:12]+1))),n.2=12)
###Standardized mean difference: Rsubread pipeline FPKM normalized ERBB2 expression values
standardized_mean(mean(rsub_fpkmlog_her2$ERBB2[13:17]),sd(rsub_fpkmlog_her2$ERBB2[13:17]),5,mean(rsub_fpkmlog_her2$ERBB2[1:12]),sd(rsub_fpkmlog_her2$ERBB2[1:12]),12)
###Standardized mean difference:Rsubread pipeline TPM normalized ERBB2 expression values
standardized_mean(mean(rsub_tpmlog_her2$ERBB2[13:17]),sd(rsub_tpmlog_her2$ERBB2[13:17]),5,mean(rsub_tpmlog_her2$ERBB2[1:12]),sd(rsub_fpkmlog_her2$ERBB2[1:12]),12)
sum(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)<=1))
sum(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)>1))
hist(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean),main = "TCGA Level 3",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
#######################comparing gene counts results ############
com_genes_TCGA<-TCGA_her2[rownames(TCGA_her2)%in%rownames(rsub_fpkm),]
par( mfrow = c( 1,3 ) ,lwd=4)
###Coefficient of variation in GFP samples across all common genes
####Coefficient of variation in TCGA pipeline processed data
com_genes_TCGA<-TCGA_her2[rownames(TCGA_her2)%in%rownames(rsub_fpkm),]
hist(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean),main = "TCGA Level 3",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
print(paste("Total number of genes having coefficient of variation less than or equal to 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)<=1)), sep=':'))
print(paste("Total number of genes having coefficient of variation more than 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)>1)), sep=':'))
tcga_her2_normalized<-data.frame(t(TCGA_her2["ERBB2",]))
tcga_her2_log_normalized<-data.frame(t(TCGA_her2["ERBB2",]))
####Coefficient of variation in Rsubread pipeline processed data
com_genes_fpkm<-rsub_fpkm[rownames(rsub_fpkm)%in%rownames(com_genes_TCGA),]
hist(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean),main = "Rsubread FPKM",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
print("Total number of genes having coefficient of variation less than or equal to 1 :")
sum(na.omit(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean)<=1))
print("Total number of genes having coefficient of variation greater than 1 :")
sum(na.omit(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean)>1))
rsub_fpkmlog_her2<-data.frame(t(rsub_fpkmlog["ERBB2",]))
rsub_fpkm_her2<-data.frame(t(rsub_fpkm["ERBB2",]))
com_genes_tpm<-rsub_fpkm[rownames(rsub_tpm)%in%rownames(com_genes_TCGA),]
hist(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)),main = "Rsubread TPM",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
print("Total number of genes having coefficient of variation less than or equal to 1: ")
sum(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)<=1))
print("Total number of genes having coefficient of variation less than or equal to 1: ")
sum(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)>1))
rsub_tpm_her2<-data.frame(t(rsub_tpm["ERBB2",]))
rsub_tpmlog_her2<-data.frame(t(rsub_tpmlog["ERBB2",]))
#######post normalization ecdf
ecdf_all_ex<-apply(log2(TCGA_her2+1),2,ecdf)
par( mfrow = c( 1, 3 ) )
plot(ecdf_all_ex[[1]],xlab=NA, ylab = NA,col="blue",main="TCGA Level 3",ylim=c(0,1),xlim = c(0,20),cex.axis=1.5, cex.lab=1.5,)
for(i in 2:12){lines(ecdf_all_ex[[i]],xlab=NA, ylab = NA,col="blue")}
for(i in 13:17){lines(ecdf_all_ex[[i]],xlab=NA, ylab = NA,col="brown")}
###using Rsubread pipeline aligned data
ecdf_all<-apply(rsub_fpkmlog,2,ecdf)
plot(ecdf_all[[1]],xlab=NA, ylab = NA,col="blue",main="Rsubread FPKM",ylim=c(0,1),xlim = c(0,20),cex.axis=1.5, cex.lab=1.5,)
for(i in 2:12){lines(ecdf_all[[i]],xlab=NA,ylab = NA,col="blue")}
for(i in 13:17){lines(ecdf_all[[i]],xlab=NA,ylab = NA,col="brown")}
ecdf_all_t<-apply(rsub_tpmlog,2,ecdf)
plot(ecdf_all_t[[1]],xlab=NA, ylab = NA,col="blue",main="Rsubread TPM",ylim=c(0,1),xlim = c(0,20),cex.axis=1.5, cex.lab=1.5,)
for(i in 2:12){lines(ecdf_all_t[[i]],xlab=NA,ylab = NA,col="blue")}
for(i in 13:17){lines(ecdf_all_t[[i]],xlab=NA,ylab = NA,col="brown")}
###Creating boxplots of the normalized ERBB2 expression
par( mfrow = c( 1, 1 ) )
par(mar=c(5.6, 4.1, 0.5, 0.5))
boxplot(log2(tcga_her2_normalized$ERBB2[1:12]+1),log2(tcga_her2_normalized$ERBB2[13:17]+1),rsub_fpkmlog_her2$ERBB2[1:12],rsub_fpkmlog_her2$ERBB2[13:17],rsub_tpmlog_her2$ERBB2[1:12],rsub_tpmlog_her2$ERBB2[13:17],ylab="log2(HER2 gene expression values)",range=0,cex.axis=1.5, cex.lab=1.5,outpch=NA,col='grey75',medcol="grey75",lwd=3,border = "grey35")
names=c("TCGA\nGFP","TCGA\nHER2","Rsubred FPKM\nGFP", "Rsubred FPKM\nHER2","Rsubred TPM\nGFP", "Rsubred TPM\nHER2")
text(seq(1,6,by=1),par("usr")[3] - 2.5, labels = names, srt = 45, pos = 1, xpd = TRUE)
points(jitter(rep(1,12),factor=2),log2(tcga_her2_normalized$ERBB2[1:12]+1),pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(2,5),factor=2),log2(tcga_her2_normalized$ERBB2[13:17]+1),pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(3,12),factor=2),rsub_fpkmlog_her2$ERBB2[1:12],pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(4,5),factor=2),rsub_fpkmlog_her2$ERBB2[13:17],pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(5,12),factor=2),rsub_tpmlog_her2$ERBB2[1:12],pch=4,cex=2,cex.lab=1.5)
points(jitter(rep(6,5),factor=2),rsub_tpmlog_her2$ERBB2[13:17],pch=4,cex=2,cex.lab=1.5)
###t.test to see if there is significance
t.test(log2(tcga_her2_normalized$ERBB2[1:12]+1),log2(tcga_her2_normalized$ERBB2[13:17]+1))
t.test(rsub_fpkmlog_her2$ERBB2[1:12],rsub_fpkmlog_her2$ERBB2[13:17])
t.test(rsub_tpmlog_her2$ERBB2[1:12],rsub_tpmlog_her2$ERBB2[13:17])
###Standardized mean difference: TCGA pipeline normalized ERBB2 expression values
standardized_mean(m.1=mean((log2(tcga_her2_normalized$ERBB2[13:17]+1))),sd.1=sd((log2(tcga_her2_normalized$ERBB2[13:17]+1))),n.1=5,m.2=mean((log2(tcga_her2_normalized$ERBB2[1:12]+1))),sd.2=sd((log2(tcga_her2_normalized$ERBB2[1:12]+1))),n.2=12)
###Standardized mean difference: Rsubread pipeline FPKM normalized ERBB2 expression values
standardized_mean(mean(rsub_fpkmlog_her2$ERBB2[13:17]),sd(rsub_fpkmlog_her2$ERBB2[13:17]),5,mean(rsub_fpkmlog_her2$ERBB2[1:12]),sd(rsub_fpkmlog_her2$ERBB2[1:12]),12)
###Standardized mean difference:Rsubread pipeline TPM normalized ERBB2 expression values
standardized_mean(mean(rsub_tpmlog_her2$ERBB2[13:17]),sd(rsub_tpmlog_her2$ERBB2[13:17]),5,mean(rsub_tpmlog_her2$ERBB2[1:12]),sd(rsub_fpkmlog_her2$ERBB2[1:12]),12)
hist(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)),main = "TCGA Level 3",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes", breaks = 10)
hist(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)),main = "TCGA Level 3",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes", breaks = 20)
hist(na.omit(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean)),main = "Rsubread FPKM",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes",breaks=20)
par( mfrow = c( 1,3 ) ,lwd=4)
###Coefficient of variation in GFP samples across all common genes
####Coefficient of variation in TCGA pipeline processed data
com_genes_TCGA<-TCGA_her2[rownames(TCGA_her2)%in%rownames(rsub_fpkm),]
hist(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)),main = "TCGA Level 3",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes", breaks = 20)
print(paste("Total number of genes having coefficient of variation less than or equal to 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)<=1)), sep=':'))
print(paste("Total number of genes having coefficient of variation more than 1 ",sum(na.omit(apply(com_genes_TCGA,1,sd)/apply(com_genes_TCGA,1,mean)>1)), sep=':'))
tcga_her2_normalized<-data.frame(t(TCGA_her2["ERBB2",]))
tcga_her2_log_normalized<-data.frame(t(TCGA_her2["ERBB2",]))
####Coefficient of variation in Rsubread pipeline processed data
com_genes_fpkm<-rsub_fpkm[rownames(rsub_fpkm)%in%rownames(com_genes_TCGA),]
hist(na.omit(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean)),main = "Rsubread FPKM",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes",breaks=20)
print("Total number of genes having coefficient of variation less than or equal to 1 :")
sum(na.omit(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean)<=1))
print("Total number of genes having coefficient of variation greater than 1 :")
sum(na.omit(apply(com_genes_fpkm,1,sd)/apply(com_genes_fpkm,1,mean)>1))
rsub_fpkmlog_her2<-data.frame(t(rsub_fpkmlog["ERBB2",]))
rsub_fpkm_her2<-data.frame(t(rsub_fpkm["ERBB2",]))
com_genes_tpm<-rsub_fpkm[rownames(rsub_tpm)%in%rownames(com_genes_TCGA),]
hist(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)),main = "Rsubread TPM",xlab = "Coefficient of variation",ylim=c(0,12500),lwd=4,ylab="Number of genes")
print("Total number of genes having coefficient of variation less than or equal to 1: ")
sum(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)<=1))
print("Total number of genes having coefficient of variation less than or equal to 1: ")
sum(na.omit(apply(com_genes_tpm,1,sd)/apply(com_genes_tpm,1,mean)>1))
rsub_tpm_her2<-data.frame(t(rsub_tpm["ERBB2",]))
rsub_tpmlog_her2<-data.frame(t(rsub_tpmlog["ERBB2",]))
#######post normalization ecdf
ecdf_all_ex<-apply(log2(TCGA_her2+1),2,ecdf)
par( mfrow = c( 1, 3 ) )
plot(ecdf_all_ex[[1]],xlab=NA, ylab = NA,col="blue",main="TCGA Level 3",ylim=c(0,1),xlim = c(0,20),cex.axis=1.5, cex.lab=1.5,)
for(i in 2:12){lines(ecdf_all_ex[[i]],xlab=NA, ylab = NA,col="blue")}
